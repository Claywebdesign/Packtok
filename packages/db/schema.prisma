generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ENUMS for Role-Based Access Control
enum Role {
  NORMAL_USER
  VENDOR
  ADMIN
  SUPER_ADMIN
}

enum Permission {
  MANAGE_CONSULTANCY
  MANAGE_MANPOWER
  MANAGE_BIDDING
  CREATE_ADMINS
}

// Core User Model
model User {
  id           String    @id // Supabase auth.users UUID
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  name         String
  email        String    @unique
  phone_number String?
  role         Role      @default(NORMAL_USER)
  otp          Otp?
  adminPermissions AdminPermission[]

  @@map("users")
}

// Join table for assigning specific permissions to ADMIN users
model AdminPermission {
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     String
  permission Permission

  @@id([userId, permission])
  @@map("admin_permissions")
}

model Otp {
  id        String   @id @default(cuid())
  hashedOtp String
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique

  @@map("otps")
}
